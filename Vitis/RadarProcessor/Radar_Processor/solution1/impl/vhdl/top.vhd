-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    data_IN_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    data_IN_TVALID : IN STD_LOGIC;
    data_IN_TREADY : OUT STD_LOGIC;
    data_OUT_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_OUT_TVALID : OUT STD_LOGIC;
    data_OUT_TREADY : IN STD_LOGIC );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.241000,HLS_SYN_LAT=4709448,HLS_SYN_TPT=none,HLS_SYN_MEM=200,HLS_SYN_DSP=0,HLS_SYN_FF=4166,HLS_SYN_LUT=4126,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_30E8 : STD_LOGIC_VECTOR (13 downto 0) := "11000011101000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv14_2FAF : STD_LOGIC_VECTOR (13 downto 0) := "10111110101111";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv14_2720 : STD_LOGIC_VECTOR (13 downto 0) := "10011100100000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal hamming_coeff_M_real_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal hamming_coeff_M_real_V_ce0 : STD_LOGIC;
    signal hamming_coeff_M_real_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal data_IN_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln6_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln10_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_OUT_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal icmp_ln17_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal icmp_ln17_reg_1097_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal icmp_ln21_reg_1116 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp6_iter2 : STD_LOGIC := '0';
    signal icmp_ln21_reg_1116_pp6_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_346 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_2_reg_357 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_reg_368 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten7_reg_379 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_3_reg_390 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_reg_401 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten15_reg_412 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_4_reg_423 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_2_reg_434 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_5_reg_445 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_6_reg_456 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln6_fu_501_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal add_ln10_fu_518_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal add_ln37_1_fu_535_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln37_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_925_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_fu_559_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_929 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_fu_567_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln37_1_reg_935 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln38_fu_575_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln40_1_fu_608_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln40_1_reg_947 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln108_1_fu_644_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state13_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state18_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln108_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_967 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_967_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_967_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_967_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_967_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln108_fu_668_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln108_reg_971 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln108_1_fu_676_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln108_1_reg_977 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln109_fu_684_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln110_2_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_2_reg_989 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_2_reg_989_pp3_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_2_reg_989_pp3_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_2_reg_989_pp3_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mat_A_M_real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_V_1_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal mat_A_M_imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_2_reg_1015 : STD_LOGIC_VECTOR (31 downto 0);
    signal hamming_coeff_M_real_V_load_reg_1020 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_fu_733_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1118_fu_736_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1118_1_fu_745_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_r_V_2_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_V_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln59_1_fu_774_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state21_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln59_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln59_reg_1056 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln59_reg_1056_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln59_fu_798_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln59_reg_1060 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln59_1_fu_806_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln59_1_reg_1065 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln60_fu_814_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_fu_859_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln61_reg_1087 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln17_fu_870_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal ap_block_state25_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state26_io : BOOLEAN;
    signal ap_block_state27_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_state27_io : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal icmp_ln17_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_fu_887_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal ap_block_state29_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state30_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_state30_io : BOOLEAN;
    signal ap_block_state31_pp6_stage0_iter2 : BOOLEAN;
    signal ap_block_state31_io : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal icmp_ln21_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_matchedFilter_fu_467_ap_ready : STD_LOGIC;
    signal grp_matchedFilter_fu_467_ap_done : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fft_fu_479_ap_ready : STD_LOGIC;
    signal grp_fft_fu_479_ap_done : STD_LOGIC;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state25 : STD_LOGIC;
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state29 : STD_LOGIC;
    signal real_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal real_V_ce0 : STD_LOGIC;
    signal real_V_we0 : STD_LOGIC;
    signal real_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal imag_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal imag_V_ce0 : STD_LOGIC;
    signal imag_V_we0 : STD_LOGIC;
    signal imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_A_M_real_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mat_A_M_real_V_ce0 : STD_LOGIC;
    signal mat_A_M_real_V_we0 : STD_LOGIC;
    signal mat_A_M_real_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_A_M_imag_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mat_A_M_imag_V_ce0 : STD_LOGIC;
    signal mat_A_M_imag_V_we0 : STD_LOGIC;
    signal mat_A_M_imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_B_M_real_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mat_B_M_real_V_ce0 : STD_LOGIC;
    signal mat_B_M_real_V_we0 : STD_LOGIC;
    signal mat_B_M_real_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_B_M_real_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_B_M_imag_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mat_B_M_imag_V_ce0 : STD_LOGIC;
    signal mat_B_M_imag_V_we0 : STD_LOGIC;
    signal mat_B_M_imag_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_B_M_imag_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_ap_start : STD_LOGIC;
    signal grp_matchedFilter_fu_467_ap_idle : STD_LOGIC;
    signal grp_matchedFilter_fu_467_a_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matchedFilter_fu_467_a_M_real_ce0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_a_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matchedFilter_fu_467_a_M_imag_ce0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_out_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matchedFilter_fu_467_out_M_real_ce0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_out_M_real_we0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_out_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_out_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matchedFilter_fu_467_out_M_imag_ce0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_out_M_imag_we0 : STD_LOGIC;
    signal grp_matchedFilter_fu_467_out_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_739_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_739_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_739_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_739_p_ce : STD_LOGIC;
    signal grp_matchedFilter_fu_467_grp_fu_748_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_748_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_748_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_748_p_ce : STD_LOGIC;
    signal grp_matchedFilter_fu_467_grp_fu_1138_p_din0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1138_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1138_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1138_p_ce : STD_LOGIC;
    signal grp_matchedFilter_fu_467_grp_fu_1142_p_din0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1142_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1142_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matchedFilter_fu_467_grp_fu_1142_p_ce : STD_LOGIC;
    signal grp_fft_fu_479_ap_start : STD_LOGIC;
    signal grp_fft_fu_479_ap_idle : STD_LOGIC;
    signal grp_fft_fu_479_a_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_fu_479_a_M_real_ce0 : STD_LOGIC;
    signal grp_fft_fu_479_a_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_fu_479_a_M_imag_ce0 : STD_LOGIC;
    signal grp_fft_fu_479_out_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_fu_479_out_M_real_ce0 : STD_LOGIC;
    signal grp_fft_fu_479_out_M_real_we0 : STD_LOGIC;
    signal grp_fft_fu_479_out_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_out_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_fu_479_out_M_imag_ce0 : STD_LOGIC;
    signal grp_fft_fu_479_out_M_imag_we0 : STD_LOGIC;
    signal grp_fft_fu_479_out_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_grp_fu_1130_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_479_grp_fu_1130_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_grp_fu_1130_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_479_grp_fu_1130_p_ce : STD_LOGIC;
    signal grp_fft_fu_479_grp_fu_1134_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_479_grp_fu_1134_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_grp_fu_1134_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_479_grp_fu_1134_p_ce : STD_LOGIC;
    signal grp_fft_fu_479_grp_fu_1146_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_479_grp_fu_1146_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_grp_fu_1146_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_479_grp_fu_1146_p_ce : STD_LOGIC;
    signal grp_fft_fu_479_grp_fu_1150_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_479_grp_fu_1150_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_479_grp_fu_1150_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_479_grp_fu_1150_p_ce : STD_LOGIC;
    signal grp_matmul_fu_491_ap_start : STD_LOGIC;
    signal grp_matmul_fu_491_ap_done : STD_LOGIC;
    signal grp_matmul_fu_491_ap_idle : STD_LOGIC;
    signal grp_matmul_fu_491_ap_ready : STD_LOGIC;
    signal grp_matmul_fu_491_a_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matmul_fu_491_a_M_real_ce0 : STD_LOGIC;
    signal grp_matmul_fu_491_a_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matmul_fu_491_a_M_imag_ce0 : STD_LOGIC;
    signal grp_matmul_fu_491_out_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matmul_fu_491_out_M_real_ce0 : STD_LOGIC;
    signal grp_matmul_fu_491_out_M_real_we0 : STD_LOGIC;
    signal grp_matmul_fu_491_out_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matmul_fu_491_out_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_matmul_fu_491_out_M_imag_ce0 : STD_LOGIC;
    signal grp_matmul_fu_491_out_M_imag_we0 : STD_LOGIC;
    signal grp_matmul_fu_491_out_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matmul_fu_491_grp_fu_1130_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matmul_fu_491_grp_fu_1130_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matmul_fu_491_grp_fu_1130_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matmul_fu_491_grp_fu_1130_p_ce : STD_LOGIC;
    signal grp_matmul_fu_491_grp_fu_1134_p_din0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matmul_fu_491_grp_fu_1134_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matmul_fu_491_grp_fu_1134_p_dout0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_matmul_fu_491_grp_fu_1134_p_ce : STD_LOGIC;
    signal i_reg_324 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_335 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_i_2_phi_fu_361_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_i_3_phi_fu_394_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_i_4_phi_fu_427_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal grp_matchedFilter_fu_467_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fft_fu_479_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_matmul_fu_491_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_cast_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_cast_fu_530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_3_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_1_cast_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_3_fu_853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_fu_865_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_5_cast_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_6_cast_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0_01001 : BOOLEAN;
    signal ap_block_pp6_stage0_01001 : BOOLEAN;
    signal icmp_ln38_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln37_fu_547_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_588_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_581_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln40_1_fu_595_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln40_fu_599_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln40_2_fu_605_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_cast_fu_614_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln39_1_fu_617_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln39_fu_623_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln39_fu_627_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln109_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln108_fu_656_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_697_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_690_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln110_fu_704_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln110_fu_708_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln110_1_fu_718_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln110_1_fu_721_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_739_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_748_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_739_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_748_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal icmp_ln60_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln59_fu_786_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_827_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_820_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln62_1_fu_834_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln62_fu_838_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln62_2_fu_844_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln62_1_fu_847_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_739_ce : STD_LOGIC;
    signal grp_fu_748_ce : STD_LOGIC;
    signal grp_fu_1130_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1130_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1130_ce : STD_LOGIC;
    signal grp_fu_1134_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1134_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1134_ce : STD_LOGIC;
    signal grp_fu_1138_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1138_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1138_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1138_ce : STD_LOGIC;
    signal grp_fu_1142_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1142_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1142_ce : STD_LOGIC;
    signal grp_fu_1146_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1146_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1146_ce : STD_LOGIC;
    signal grp_fu_1150_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1150_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1150_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal regslice_both_data_OUT_U_apdone_blk : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;
    signal regslice_both_data_IN_U_apdone_blk : STD_LOGIC;
    signal data_IN_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal data_IN_TVALID_int_regslice : STD_LOGIC;
    signal data_IN_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_data_IN_U_ack_in : STD_LOGIC;
    signal data_OUT_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal data_OUT_TVALID_int_regslice : STD_LOGIC;
    signal data_OUT_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_data_OUT_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_matchedFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_real_ce0 : OUT STD_LOGIC;
        a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_imag_ce0 : OUT STD_LOGIC;
        a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_real_ce0 : OUT STD_LOGIC;
        out_M_real_we0 : OUT STD_LOGIC;
        out_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_imag_ce0 : OUT STD_LOGIC;
        out_M_imag_we0 : OUT STD_LOGIC;
        out_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_739_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_739_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_739_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_739_p_ce : OUT STD_LOGIC;
        grp_fu_748_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_748_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_748_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_748_p_ce : OUT STD_LOGIC;
        grp_fu_1138_p_din0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        grp_fu_1138_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1138_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1138_p_ce : OUT STD_LOGIC;
        grp_fu_1142_p_din0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        grp_fu_1142_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1142_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1142_p_ce : OUT STD_LOGIC );
    end component;


    component top_fft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_real_ce0 : OUT STD_LOGIC;
        a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_imag_ce0 : OUT STD_LOGIC;
        a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_real_ce0 : OUT STD_LOGIC;
        out_M_real_we0 : OUT STD_LOGIC;
        out_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_imag_ce0 : OUT STD_LOGIC;
        out_M_imag_we0 : OUT STD_LOGIC;
        out_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1130_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1130_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1130_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1130_p_ce : OUT STD_LOGIC;
        grp_fu_1134_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1134_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1134_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1134_p_ce : OUT STD_LOGIC;
        grp_fu_1146_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1146_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1146_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1146_p_ce : OUT STD_LOGIC;
        grp_fu_1150_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1150_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1150_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1150_p_ce : OUT STD_LOGIC );
    end component;


    component top_matmul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_real_ce0 : OUT STD_LOGIC;
        a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_M_imag_ce0 : OUT STD_LOGIC;
        a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_real_ce0 : OUT STD_LOGIC;
        out_M_real_we0 : OUT STD_LOGIC;
        out_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_imag_ce0 : OUT STD_LOGIC;
        out_M_imag_we0 : OUT STD_LOGIC;
        out_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1130_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1130_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1130_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1130_p_ce : OUT STD_LOGIC;
        grp_fu_1134_p_din0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_fu_1134_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1134_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
        grp_fu_1134_p_ce : OUT STD_LOGIC );
    end component;


    component top_mul_10s_32s_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component top_mul_9s_32s_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component top_hamming_coeff_M_real_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component top_real_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    hamming_coeff_M_real_V_U : component top_hamming_coeff_M_real_V
    generic map (
        DataWidth => 9,
        AddressRange => 39,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hamming_coeff_M_real_V_address0,
        ce0 => hamming_coeff_M_real_V_ce0,
        q0 => hamming_coeff_M_real_V_q0);

    real_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => real_V_address0,
        ce0 => real_V_ce0,
        we0 => real_V_we0,
        d0 => real_V_d0,
        q0 => real_V_q0);

    imag_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => imag_V_address0,
        ce0 => imag_V_ce0,
        we0 => imag_V_we0,
        d0 => imag_V_d0,
        q0 => imag_V_q0);

    mat_A_M_real_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mat_A_M_real_V_address0,
        ce0 => mat_A_M_real_V_ce0,
        we0 => mat_A_M_real_V_we0,
        d0 => mat_A_M_real_V_d0,
        q0 => mat_A_M_real_V_q0);

    mat_A_M_imag_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mat_A_M_imag_V_address0,
        ce0 => mat_A_M_imag_V_ce0,
        we0 => mat_A_M_imag_V_we0,
        d0 => mat_A_M_imag_V_d0,
        q0 => mat_A_M_imag_V_q0);

    mat_B_M_real_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mat_B_M_real_V_address0,
        ce0 => mat_B_M_real_V_ce0,
        we0 => mat_B_M_real_V_we0,
        d0 => mat_B_M_real_V_d0,
        q0 => mat_B_M_real_V_q0);

    mat_B_M_imag_V_U : component top_real_V
    generic map (
        DataWidth => 32,
        AddressRange => 12520,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mat_B_M_imag_V_address0,
        ce0 => mat_B_M_imag_V_ce0,
        we0 => mat_B_M_imag_V_we0,
        d0 => mat_B_M_imag_V_d0,
        q0 => mat_B_M_imag_V_q0);

    grp_matchedFilter_fu_467 : component top_matchedFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matchedFilter_fu_467_ap_start,
        ap_done => grp_matchedFilter_fu_467_ap_done,
        ap_idle => grp_matchedFilter_fu_467_ap_idle,
        ap_ready => grp_matchedFilter_fu_467_ap_ready,
        a_M_real_address0 => grp_matchedFilter_fu_467_a_M_real_address0,
        a_M_real_ce0 => grp_matchedFilter_fu_467_a_M_real_ce0,
        a_M_real_q0 => mat_B_M_real_V_q0,
        a_M_imag_address0 => grp_matchedFilter_fu_467_a_M_imag_address0,
        a_M_imag_ce0 => grp_matchedFilter_fu_467_a_M_imag_ce0,
        a_M_imag_q0 => mat_B_M_imag_V_q0,
        out_M_real_address0 => grp_matchedFilter_fu_467_out_M_real_address0,
        out_M_real_ce0 => grp_matchedFilter_fu_467_out_M_real_ce0,
        out_M_real_we0 => grp_matchedFilter_fu_467_out_M_real_we0,
        out_M_real_d0 => grp_matchedFilter_fu_467_out_M_real_d0,
        out_M_imag_address0 => grp_matchedFilter_fu_467_out_M_imag_address0,
        out_M_imag_ce0 => grp_matchedFilter_fu_467_out_M_imag_ce0,
        out_M_imag_we0 => grp_matchedFilter_fu_467_out_M_imag_we0,
        out_M_imag_d0 => grp_matchedFilter_fu_467_out_M_imag_d0,
        grp_fu_739_p_din0 => grp_matchedFilter_fu_467_grp_fu_739_p_din0,
        grp_fu_739_p_din1 => grp_matchedFilter_fu_467_grp_fu_739_p_din1,
        grp_fu_739_p_dout0 => grp_matchedFilter_fu_467_grp_fu_739_p_dout0,
        grp_fu_739_p_ce => grp_matchedFilter_fu_467_grp_fu_739_p_ce,
        grp_fu_748_p_din0 => grp_matchedFilter_fu_467_grp_fu_748_p_din0,
        grp_fu_748_p_din1 => grp_matchedFilter_fu_467_grp_fu_748_p_din1,
        grp_fu_748_p_dout0 => grp_matchedFilter_fu_467_grp_fu_748_p_dout0,
        grp_fu_748_p_ce => grp_matchedFilter_fu_467_grp_fu_748_p_ce,
        grp_fu_1138_p_din0 => grp_matchedFilter_fu_467_grp_fu_1138_p_din0,
        grp_fu_1138_p_din1 => grp_matchedFilter_fu_467_grp_fu_1138_p_din1,
        grp_fu_1138_p_dout0 => grp_matchedFilter_fu_467_grp_fu_1138_p_dout0,
        grp_fu_1138_p_ce => grp_matchedFilter_fu_467_grp_fu_1138_p_ce,
        grp_fu_1142_p_din0 => grp_matchedFilter_fu_467_grp_fu_1142_p_din0,
        grp_fu_1142_p_din1 => grp_matchedFilter_fu_467_grp_fu_1142_p_din1,
        grp_fu_1142_p_dout0 => grp_matchedFilter_fu_467_grp_fu_1142_p_dout0,
        grp_fu_1142_p_ce => grp_matchedFilter_fu_467_grp_fu_1142_p_ce);

    grp_fft_fu_479 : component top_fft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fft_fu_479_ap_start,
        ap_done => grp_fft_fu_479_ap_done,
        ap_idle => grp_fft_fu_479_ap_idle,
        ap_ready => grp_fft_fu_479_ap_ready,
        a_M_real_address0 => grp_fft_fu_479_a_M_real_address0,
        a_M_real_ce0 => grp_fft_fu_479_a_M_real_ce0,
        a_M_real_q0 => mat_B_M_real_V_q0,
        a_M_imag_address0 => grp_fft_fu_479_a_M_imag_address0,
        a_M_imag_ce0 => grp_fft_fu_479_a_M_imag_ce0,
        a_M_imag_q0 => mat_B_M_imag_V_q0,
        out_M_real_address0 => grp_fft_fu_479_out_M_real_address0,
        out_M_real_ce0 => grp_fft_fu_479_out_M_real_ce0,
        out_M_real_we0 => grp_fft_fu_479_out_M_real_we0,
        out_M_real_d0 => grp_fft_fu_479_out_M_real_d0,
        out_M_imag_address0 => grp_fft_fu_479_out_M_imag_address0,
        out_M_imag_ce0 => grp_fft_fu_479_out_M_imag_ce0,
        out_M_imag_we0 => grp_fft_fu_479_out_M_imag_we0,
        out_M_imag_d0 => grp_fft_fu_479_out_M_imag_d0,
        grp_fu_1130_p_din0 => grp_fft_fu_479_grp_fu_1130_p_din0,
        grp_fu_1130_p_din1 => grp_fft_fu_479_grp_fu_1130_p_din1,
        grp_fu_1130_p_dout0 => grp_fft_fu_479_grp_fu_1130_p_dout0,
        grp_fu_1130_p_ce => grp_fft_fu_479_grp_fu_1130_p_ce,
        grp_fu_1134_p_din0 => grp_fft_fu_479_grp_fu_1134_p_din0,
        grp_fu_1134_p_din1 => grp_fft_fu_479_grp_fu_1134_p_din1,
        grp_fu_1134_p_dout0 => grp_fft_fu_479_grp_fu_1134_p_dout0,
        grp_fu_1134_p_ce => grp_fft_fu_479_grp_fu_1134_p_ce,
        grp_fu_1146_p_din0 => grp_fft_fu_479_grp_fu_1146_p_din0,
        grp_fu_1146_p_din1 => grp_fft_fu_479_grp_fu_1146_p_din1,
        grp_fu_1146_p_dout0 => grp_fft_fu_479_grp_fu_1146_p_dout0,
        grp_fu_1146_p_ce => grp_fft_fu_479_grp_fu_1146_p_ce,
        grp_fu_1150_p_din0 => grp_fft_fu_479_grp_fu_1150_p_din0,
        grp_fu_1150_p_din1 => grp_fft_fu_479_grp_fu_1150_p_din1,
        grp_fu_1150_p_dout0 => grp_fft_fu_479_grp_fu_1150_p_dout0,
        grp_fu_1150_p_ce => grp_fft_fu_479_grp_fu_1150_p_ce);

    grp_matmul_fu_491 : component top_matmul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matmul_fu_491_ap_start,
        ap_done => grp_matmul_fu_491_ap_done,
        ap_idle => grp_matmul_fu_491_ap_idle,
        ap_ready => grp_matmul_fu_491_ap_ready,
        a_M_real_address0 => grp_matmul_fu_491_a_M_real_address0,
        a_M_real_ce0 => grp_matmul_fu_491_a_M_real_ce0,
        a_M_real_q0 => mat_A_M_real_V_q0,
        a_M_imag_address0 => grp_matmul_fu_491_a_M_imag_address0,
        a_M_imag_ce0 => grp_matmul_fu_491_a_M_imag_ce0,
        a_M_imag_q0 => mat_A_M_imag_V_q0,
        out_M_real_address0 => grp_matmul_fu_491_out_M_real_address0,
        out_M_real_ce0 => grp_matmul_fu_491_out_M_real_ce0,
        out_M_real_we0 => grp_matmul_fu_491_out_M_real_we0,
        out_M_real_d0 => grp_matmul_fu_491_out_M_real_d0,
        out_M_imag_address0 => grp_matmul_fu_491_out_M_imag_address0,
        out_M_imag_ce0 => grp_matmul_fu_491_out_M_imag_ce0,
        out_M_imag_we0 => grp_matmul_fu_491_out_M_imag_we0,
        out_M_imag_d0 => grp_matmul_fu_491_out_M_imag_d0,
        grp_fu_1130_p_din0 => grp_matmul_fu_491_grp_fu_1130_p_din0,
        grp_fu_1130_p_din1 => grp_matmul_fu_491_grp_fu_1130_p_din1,
        grp_fu_1130_p_dout0 => grp_matmul_fu_491_grp_fu_1130_p_dout0,
        grp_fu_1130_p_ce => grp_matmul_fu_491_grp_fu_1130_p_ce,
        grp_fu_1134_p_din0 => grp_matmul_fu_491_grp_fu_1134_p_din0,
        grp_fu_1134_p_din1 => grp_matmul_fu_491_grp_fu_1134_p_din1,
        grp_fu_1134_p_dout0 => grp_matmul_fu_491_grp_fu_1134_p_dout0,
        grp_fu_1134_p_ce => grp_matmul_fu_491_grp_fu_1134_p_ce);

    mul_10s_32s_40_2_1_U33 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_739_p0,
        din1 => grp_fu_739_p1,
        ce => grp_fu_739_ce,
        dout => grp_fu_739_p2);

    mul_10s_32s_40_2_1_U34 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_748_p0,
        din1 => grp_fu_748_p1,
        ce => grp_fu_748_ce,
        dout => grp_fu_748_p2);

    mul_10s_32s_40_2_1_U35 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1130_p0,
        din1 => grp_fu_1130_p1,
        ce => grp_fu_1130_ce,
        dout => grp_fu_1130_p2);

    mul_10s_32s_40_2_1_U36 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1134_p0,
        din1 => grp_fu_1134_p1,
        ce => grp_fu_1134_ce,
        dout => grp_fu_1134_p2);

    mul_9s_32s_40_2_1_U37 : component top_mul_9s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1138_p0,
        din1 => grp_fu_1138_p1,
        ce => grp_fu_1138_ce,
        dout => grp_fu_1138_p2);

    mul_9s_32s_40_2_1_U38 : component top_mul_9s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1142_p0,
        din1 => grp_fu_1142_p1,
        ce => grp_fu_1142_ce,
        dout => grp_fu_1142_p2);

    mul_10s_32s_40_2_1_U39 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1146_p0,
        din1 => grp_fu_1146_p1,
        ce => grp_fu_1146_ce,
        dout => grp_fu_1146_p2);

    mul_10s_32s_40_2_1_U40 : component top_mul_10s_32s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 10,
        din1_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1150_p0,
        din1 => grp_fu_1150_p1,
        ce => grp_fu_1150_ce,
        dout => grp_fu_1150_p2);

    regslice_both_data_IN_U : component top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_IN_TDATA,
        vld_in => data_IN_TVALID,
        ack_in => regslice_both_data_IN_U_ack_in,
        data_out => data_IN_TDATA_int_regslice,
        vld_out => data_IN_TVALID_int_regslice,
        ack_out => data_IN_TREADY_int_regslice,
        apdone_blk => regslice_both_data_IN_U_apdone_blk);

    regslice_both_data_OUT_U : component top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_OUT_TDATA_int_regslice,
        vld_in => data_OUT_TVALID_int_regslice,
        ack_in => data_OUT_TREADY_int_regslice,
        data_out => data_OUT_TDATA,
        vld_out => regslice_both_data_OUT_U_vld_out,
        ack_out => data_OUT_TREADY,
        apdone_blk => regslice_both_data_OUT_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state6)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state6);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state13) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state13)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state13);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                elsif (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state21)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state25))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state25)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state25);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state29))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state29)) then 
                        ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state29);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_fu_479_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fft_fu_479_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_fft_fu_479_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_fu_479_ap_ready = ap_const_logic_1)) then 
                    grp_fft_fu_479_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_matchedFilter_fu_467_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matchedFilter_fu_467_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_matchedFilter_fu_467_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matchedFilter_fu_467_ap_ready = ap_const_logic_1)) then 
                    grp_matchedFilter_fu_467_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_matmul_fu_491_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matmul_fu_491_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_matmul_fu_491_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matmul_fu_491_ap_ready = ap_const_logic_1)) then 
                    grp_matmul_fu_491_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_1_reg_335 <= ap_const_lv14_0;
            elsif ((not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_reg_335 <= add_ln10_fu_518_p2;
            end if; 
        end if;
    end process;

    i_2_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_2_reg_357 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_reg_925 = ap_const_lv1_0))) then 
                i_2_reg_357 <= select_ln37_1_reg_935;
            end if; 
        end if;
    end process;

    i_3_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln108_reg_967 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                i_3_reg_390 <= select_ln108_1_reg_977;
            elsif (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_3_reg_390 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_4_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln59_reg_1056 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                i_4_reg_423 <= select_ln59_1_reg_1065;
            elsif (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i_4_reg_423 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_5_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_5_reg_445 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln17_fu_876_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                i_5_reg_445 <= add_ln17_fu_870_p2;
            end if; 
        end if;
    end process;

    i_6_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                i_6_reg_456 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln21_fu_893_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                i_6_reg_456 <= add_ln21_fu_887_p2;
            end if; 
        end if;
    end process;

    i_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                i_reg_324 <= ap_const_lv14_0;
            elsif ((not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_324 <= add_ln6_fu_501_p2;
            end if; 
        end if;
    end process;

    indvar_flatten15_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln59_fu_780_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                indvar_flatten15_reg_412 <= add_ln59_1_fu_774_p2;
            elsif (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                indvar_flatten15_reg_412 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten7_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
                indvar_flatten7_reg_379 <= add_ln108_1_fu_644_p2;
            elsif (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                indvar_flatten7_reg_379 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten_reg_346 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_346 <= add_ln37_1_fu_535_p2;
            end if; 
        end if;
    end process;

    j_1_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
                j_1_reg_401 <= add_ln109_fu_684_p2;
            elsif (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                j_1_reg_401 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_2_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln59_fu_780_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                j_2_reg_434 <= add_ln60_fu_814_p2;
            elsif (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                j_2_reg_434 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_reg_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                j_reg_368 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                j_reg_368 <= add_ln38_fu_575_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_reg_925 = ap_const_lv1_0))) then
                add_ln40_1_reg_947 <= add_ln40_1_fu_608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln59_reg_1056 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                add_ln61_reg_1087 <= add_ln61_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_reg_967_pp3_iter1_reg = ap_const_lv1_0))) then
                hamming_coeff_M_real_V_load_reg_1020 <= hamming_coeff_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln108_reg_967 <= icmp_ln108_fu_650_p2;
                icmp_ln108_reg_967_pp3_iter1_reg <= icmp_ln108_reg_967;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln108_reg_967_pp3_iter2_reg <= icmp_ln108_reg_967_pp3_iter1_reg;
                icmp_ln108_reg_967_pp3_iter3_reg <= icmp_ln108_reg_967_pp3_iter2_reg;
                icmp_ln108_reg_967_pp3_iter4_reg <= icmp_ln108_reg_967_pp3_iter3_reg;
                    zext_ln110_2_reg_989_pp3_iter2_reg(13 downto 0) <= zext_ln110_2_reg_989(13 downto 0);
                    zext_ln110_2_reg_989_pp3_iter3_reg(13 downto 0) <= zext_ln110_2_reg_989_pp3_iter2_reg(13 downto 0);
                    zext_ln110_2_reg_989_pp3_iter4_reg(13 downto 0) <= zext_ln110_2_reg_989_pp3_iter3_reg(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                icmp_ln17_reg_1097 <= icmp_ln17_fu_876_p2;
                icmp_ln17_reg_1097_pp5_iter1_reg <= icmp_ln17_reg_1097;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                icmp_ln21_reg_1116 <= icmp_ln21_fu_893_p2;
                icmp_ln21_reg_1116_pp6_iter1_reg <= icmp_ln21_reg_1116;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln37_reg_925 <= icmp_ln37_fu_541_p2;
                icmp_ln37_reg_925_pp2_iter1_reg <= icmp_ln37_reg_925;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln59_reg_1056 <= icmp_ln59_fu_780_p2;
                icmp_ln59_reg_1056_pp4_iter1_reg <= icmp_ln59_reg_1056;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln108_reg_967_pp3_iter1_reg = ap_const_lv1_0))) then
                p_r_M_imag_V_2_reg_1015 <= mat_A_M_imag_V_q0;
                p_r_M_real_V_1_reg_1010 <= mat_A_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_reg_967_pp3_iter3_reg = ap_const_lv1_0))) then
                p_r_M_imag_V_reg_1046 <= grp_fu_748_p2(39 downto 8);
                p_r_V_2_reg_1041 <= grp_fu_739_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                select_ln108_1_reg_977 <= select_ln108_1_fu_676_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                select_ln108_reg_971 <= select_ln108_fu_668_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                select_ln37_1_reg_935 <= select_ln37_1_fu_567_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_0))) then
                select_ln37_reg_929 <= select_ln37_fu_559_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln59_fu_780_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                select_ln59_1_reg_1065 <= select_ln59_1_fu_806_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln59_fu_780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                select_ln59_reg_1060 <= select_ln59_fu_798_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln108_reg_967 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                    zext_ln110_2_reg_989(13 downto 0) <= zext_ln110_2_fu_727_p1(13 downto 0);
            end if;
        end if;
    end process;
    zext_ln110_2_reg_989(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln110_2_reg_989_pp3_iter2_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln110_2_reg_989_pp3_iter3_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln110_2_reg_989_pp3_iter4_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state2, icmp_ln6_fu_507_p2, ap_CS_fsm_state4, icmp_ln10_fu_524_p2, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2, ap_enable_reg_pp2_iter0, icmp_ln37_fu_541_p2, ap_enable_reg_pp3_iter0, icmp_ln108_fu_650_p2, ap_enable_reg_pp4_iter0, icmp_ln59_fu_780_p2, ap_enable_reg_pp5_iter0, icmp_ln17_fu_876_p2, ap_enable_reg_pp6_iter0, icmp_ln21_fu_893_p2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, grp_matchedFilter_fu_467_ap_done, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter5, ap_CS_fsm_state20, grp_fft_fu_479_ap_done, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_block_pp5_stage0_subdone, ap_block_pp6_stage0_subdone, grp_matmul_fu_491_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state32, regslice_both_data_OUT_U_apdone_blk, data_IN_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln6_fu_507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln10_fu_524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (icmp_ln37_fu_541_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_matmul_fu_491_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_matchedFilter_fu_467_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (icmp_ln108_fu_650_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (icmp_ln108_fu_650_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_fft_fu_479_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (icmp_ln59_fu_780_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (icmp_ln59_fu_780_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (icmp_ln17_fu_876_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (icmp_ln17_fu_876_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (icmp_ln21_fu_893_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif ((((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (icmp_ln21_fu_893_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (regslice_both_data_OUT_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln108_1_fu_644_p2 <= std_logic_vector(unsigned(indvar_flatten7_reg_379) + unsigned(ap_const_lv14_1));
    add_ln108_fu_656_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_3_phi_fu_394_p4) + unsigned(ap_const_lv9_1));
    add_ln109_fu_684_p2 <= std_logic_vector(unsigned(select_ln108_fu_668_p3) + unsigned(ap_const_lv6_1));
    add_ln10_fu_518_p2 <= std_logic_vector(unsigned(i_1_reg_335) + unsigned(ap_const_lv14_1));
    add_ln110_1_fu_721_p2 <= std_logic_vector(unsigned(add_ln110_fu_708_p2) + unsigned(zext_ln110_1_fu_718_p1));
    add_ln110_fu_708_p2 <= std_logic_vector(unsigned(tmp_2_fu_690_p3) + unsigned(zext_ln110_fu_704_p1));
    add_ln17_fu_870_p2 <= std_logic_vector(unsigned(i_5_reg_445) + unsigned(ap_const_lv14_1));
    add_ln21_fu_887_p2 <= std_logic_vector(unsigned(i_6_reg_456) + unsigned(ap_const_lv14_1));
    add_ln37_1_fu_535_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_346) + unsigned(ap_const_lv14_1));
    add_ln37_fu_547_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_2_phi_fu_361_p4) + unsigned(ap_const_lv9_1));
    add_ln38_fu_575_p2 <= std_logic_vector(unsigned(select_ln37_fu_559_p3) + unsigned(ap_const_lv6_1));
    add_ln39_1_fu_617_p2 <= std_logic_vector(unsigned(tmp_1_fu_588_p3) + unsigned(j_cast_fu_614_p1));
    add_ln39_fu_627_p2 <= std_logic_vector(unsigned(zext_ln39_fu_623_p1) + unsigned(tmp_fu_581_p3));
    add_ln40_1_fu_608_p2 <= std_logic_vector(unsigned(add_ln40_fu_599_p2) + unsigned(zext_ln40_2_fu_605_p1));
    add_ln40_fu_599_p2 <= std_logic_vector(unsigned(tmp_fu_581_p3) + unsigned(zext_ln40_1_fu_595_p1));
    add_ln59_1_fu_774_p2 <= std_logic_vector(unsigned(indvar_flatten15_reg_412) + unsigned(ap_const_lv14_1));
    add_ln59_fu_786_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_4_phi_fu_427_p4) + unsigned(ap_const_lv9_1));
    add_ln60_fu_814_p2 <= std_logic_vector(unsigned(select_ln59_fu_798_p3) + unsigned(ap_const_lv6_1));
    add_ln61_fu_859_p2 <= std_logic_vector(unsigned(zext_ln62_2_fu_844_p1) + unsigned(tmp_4_fu_820_p3));
    add_ln62_1_fu_847_p2 <= std_logic_vector(unsigned(add_ln62_fu_838_p2) + unsigned(zext_ln62_2_fu_844_p1));
    add_ln62_fu_838_p2 <= std_logic_vector(unsigned(tmp_4_fu_820_p3) + unsigned(zext_ln62_1_fu_834_p1));
    add_ln6_fu_501_p2 <= std_logic_vector(unsigned(i_reg_324) + unsigned(ap_const_lv14_1));
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state19 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(12);
    ap_CS_fsm_state24 <= ap_CS_fsm(14);
    ap_CS_fsm_state28 <= ap_CS_fsm(16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(18);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp5_stage0_01001_assign_proc : process(ap_enable_reg_pp5_iter1, icmp_ln17_reg_1097, ap_enable_reg_pp5_iter2, icmp_ln17_reg_1097_pp5_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp5_stage0_01001 <= (((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp5_stage0_11001_assign_proc : process(ap_enable_reg_pp5_iter1, icmp_ln17_reg_1097, ap_enable_reg_pp5_iter2, icmp_ln17_reg_1097_pp5_iter1_reg, ap_block_state26_io, ap_block_state27_io, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp5_stage0_11001 <= (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state27_io) or ((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state26_io) or ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp5_stage0_subdone_assign_proc : process(ap_enable_reg_pp5_iter1, icmp_ln17_reg_1097, ap_enable_reg_pp5_iter2, icmp_ln17_reg_1097_pp5_iter1_reg, ap_block_state26_io, ap_block_state27_io, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp5_stage0_subdone <= (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state27_io) or ((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state26_io) or ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))));
    end process;

        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp6_stage0_01001_assign_proc : process(ap_enable_reg_pp6_iter1, icmp_ln21_reg_1116, ap_enable_reg_pp6_iter2, icmp_ln21_reg_1116_pp6_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp6_stage0_01001 <= (((icmp_ln21_reg_1116 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)) or ((data_OUT_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp6_stage0_11001_assign_proc : process(ap_enable_reg_pp6_iter1, icmp_ln21_reg_1116, ap_enable_reg_pp6_iter2, icmp_ln21_reg_1116_pp6_iter1_reg, ap_block_state30_io, ap_block_state31_io, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp6_stage0_11001 <= (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_io) or ((icmp_ln21_reg_1116 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp6_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((data_OUT_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp6_stage0_subdone_assign_proc : process(ap_enable_reg_pp6_iter1, icmp_ln21_reg_1116, ap_enable_reg_pp6_iter2, icmp_ln21_reg_1116_pp6_iter1_reg, ap_block_state30_io, ap_block_state31_io, data_OUT_TREADY_int_regslice)
    begin
                ap_block_pp6_stage0_subdone <= (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state30_io) or ((icmp_ln21_reg_1116 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp6_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state31_io) or ((data_OUT_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0)))));
    end process;

        ap_block_state13_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_assign_proc : process(icmp_ln6_fu_507_p2, data_IN_TVALID_int_regslice)
    begin
                ap_block_state2 <= ((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state21_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_io_assign_proc : process(icmp_ln17_reg_1097, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state26_io <= ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state26_pp5_stage0_iter1_assign_proc : process(icmp_ln17_reg_1097, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state26_pp5_stage0_iter1 <= ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state27_io_assign_proc : process(icmp_ln17_reg_1097_pp5_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state27_io <= ((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state27_pp5_stage0_iter2_assign_proc : process(icmp_ln17_reg_1097_pp5_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state27_pp5_stage0_iter2 <= ((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state29_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_io_assign_proc : process(icmp_ln21_reg_1116, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state30_io <= ((icmp_ln21_reg_1116 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state30_pp6_stage0_iter1_assign_proc : process(icmp_ln21_reg_1116, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state30_pp6_stage0_iter1 <= ((icmp_ln21_reg_1116 = ap_const_lv1_0) and (data_OUT_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state31_io_assign_proc : process(icmp_ln21_reg_1116_pp6_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state31_io <= ((data_OUT_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state31_pp6_stage0_iter2_assign_proc : process(icmp_ln21_reg_1116_pp6_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
                ap_block_state31_pp6_stage0_iter2 <= ((data_OUT_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state4_assign_proc : process(icmp_ln10_fu_524_p2, data_IN_TVALID_int_regslice)
    begin
                ap_block_state4 <= ((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state6_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp2_exit_iter0_state6_assign_proc : process(icmp_ln37_fu_541_p2)
    begin
        if ((icmp_ln37_fu_541_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state13_assign_proc : process(icmp_ln108_fu_650_p2)
    begin
        if ((icmp_ln108_fu_650_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state21_assign_proc : process(icmp_ln59_fu_780_p2)
    begin
        if ((icmp_ln59_fu_780_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state25_assign_proc : process(icmp_ln17_fu_876_p2)
    begin
        if ((icmp_ln17_fu_876_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state25 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state29_assign_proc : process(icmp_ln21_fu_893_p2)
    begin
        if ((icmp_ln21_fu_893_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state29 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state29 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);

    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter5)
    begin
        if (((ap_enable_reg_pp3_iter5 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_enable_reg_pp5_iter0)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2, ap_enable_reg_pp6_iter0)
    begin
        if (((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_2_phi_fu_361_p4_assign_proc : process(i_2_reg_357, ap_CS_fsm_pp2_stage0, icmp_ln37_reg_925, select_ln37_1_reg_935, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln37_reg_925 = ap_const_lv1_0))) then 
            ap_phi_mux_i_2_phi_fu_361_p4 <= select_ln37_1_reg_935;
        else 
            ap_phi_mux_i_2_phi_fu_361_p4 <= i_2_reg_357;
        end if; 
    end process;


    ap_phi_mux_i_3_phi_fu_394_p4_assign_proc : process(i_3_reg_390, ap_CS_fsm_pp3_stage0, icmp_ln108_reg_967, select_ln108_1_reg_977, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln108_reg_967 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_i_3_phi_fu_394_p4 <= select_ln108_1_reg_977;
        else 
            ap_phi_mux_i_3_phi_fu_394_p4 <= i_3_reg_390;
        end if; 
    end process;


    ap_phi_mux_i_4_phi_fu_427_p4_assign_proc : process(i_4_reg_423, ap_CS_fsm_pp4_stage0, icmp_ln59_reg_1056, select_ln59_1_reg_1065, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln59_reg_1056 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_i_4_phi_fu_427_p4 <= select_ln59_1_reg_1065;
        else 
            ap_phi_mux_i_4_phi_fu_427_p4 <= i_4_reg_423;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    data_IN_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, icmp_ln6_fu_507_p2, ap_CS_fsm_state4, icmp_ln10_fu_524_p2, data_IN_TVALID_int_regslice)
    begin
        if ((((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            data_IN_TDATA_blk_n <= data_IN_TVALID_int_regslice;
        else 
            data_IN_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_IN_TREADY <= regslice_both_data_IN_U_ack_in;

    data_IN_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state2, icmp_ln6_fu_507_p2, ap_CS_fsm_state4, icmp_ln10_fu_524_p2, data_IN_TVALID_int_regslice)
    begin
        if (((not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            data_IN_TREADY_int_regslice <= ap_const_logic_1;
        else 
            data_IN_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    data_OUT_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0, icmp_ln17_reg_1097, ap_enable_reg_pp5_iter2, icmp_ln17_reg_1097_pp5_iter1_reg, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, ap_block_pp6_stage0, icmp_ln21_reg_1116, ap_enable_reg_pp6_iter2, icmp_ln21_reg_1116_pp6_iter1_reg, data_OUT_TREADY_int_regslice)
    begin
        if ((((icmp_ln21_reg_1116 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0) and (icmp_ln21_reg_1116_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1)) or ((icmp_ln17_reg_1097_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)))) then 
            data_OUT_TDATA_blk_n <= data_OUT_TREADY_int_regslice;
        else 
            data_OUT_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_OUT_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, icmp_ln17_reg_1097, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, icmp_ln21_reg_1116, real_V_q0, imag_V_q0, ap_block_pp5_stage0_01001, ap_block_pp6_stage0_01001)
    begin
        if (((icmp_ln21_reg_1116 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            data_OUT_TDATA_int_regslice <= imag_V_q0;
        elsif (((icmp_ln17_reg_1097 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_01001) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            data_OUT_TDATA_int_regslice <= real_V_q0;
        else 
            data_OUT_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    data_OUT_TVALID <= regslice_both_data_OUT_U_vld_out;

    data_OUT_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, icmp_ln17_reg_1097, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, icmp_ln21_reg_1116, ap_block_pp5_stage0_11001, ap_block_pp6_stage0_11001)
    begin
        if ((((icmp_ln21_reg_1116 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((icmp_ln17_reg_1097 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)))) then 
            data_OUT_TVALID_int_regslice <= ap_const_logic_1;
        else 
            data_OUT_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    grp_fft_fu_479_ap_start <= grp_fft_fu_479_ap_start_reg;
    grp_fft_fu_479_grp_fu_1130_p_dout0 <= grp_fu_1130_p2;
    grp_fft_fu_479_grp_fu_1134_p_dout0 <= grp_fu_1134_p2;
    grp_fft_fu_479_grp_fu_1146_p_dout0 <= grp_fu_1146_p2;
    grp_fft_fu_479_grp_fu_1150_p_dout0 <= grp_fu_1150_p2;

    grp_fu_1130_ce_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1130_p_ce, grp_matmul_fu_491_grp_fu_1130_p_ce, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1130_ce <= grp_matmul_fu_491_grp_fu_1130_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1130_ce <= grp_fft_fu_479_grp_fu_1130_p_ce;
        else 
            grp_fu_1130_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1130_p0_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1130_p_din0, grp_matmul_fu_491_grp_fu_1130_p_din0, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1130_p0 <= grp_matmul_fu_491_grp_fu_1130_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1130_p0 <= grp_fft_fu_479_grp_fu_1130_p_din0;
        end if; 
    end process;


    grp_fu_1130_p1_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1130_p_din1, grp_matmul_fu_491_grp_fu_1130_p_din1, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1130_p1 <= grp_matmul_fu_491_grp_fu_1130_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1130_p1 <= grp_fft_fu_479_grp_fu_1130_p_din1;
        end if; 
    end process;


    grp_fu_1134_ce_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1134_p_ce, grp_matmul_fu_491_grp_fu_1134_p_ce, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1134_ce <= grp_matmul_fu_491_grp_fu_1134_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1134_ce <= grp_fft_fu_479_grp_fu_1134_p_ce;
        else 
            grp_fu_1134_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1134_p0_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1134_p_din0, grp_matmul_fu_491_grp_fu_1134_p_din0, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1134_p0 <= grp_matmul_fu_491_grp_fu_1134_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1134_p0 <= grp_fft_fu_479_grp_fu_1134_p_din0;
        end if; 
    end process;


    grp_fu_1134_p1_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1134_p_din1, grp_matmul_fu_491_grp_fu_1134_p_din1, ap_CS_fsm_state19, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_1134_p1 <= grp_matmul_fu_491_grp_fu_1134_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1134_p1 <= grp_fft_fu_479_grp_fu_1134_p_din1;
        end if; 
    end process;


    grp_fu_1138_ce_assign_proc : process(ap_CS_fsm_state12, grp_matchedFilter_fu_467_grp_fu_1138_p_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_1138_ce <= grp_matchedFilter_fu_467_grp_fu_1138_p_ce;
        else 
            grp_fu_1138_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1138_p0 <= grp_matchedFilter_fu_467_grp_fu_1138_p_din0;
    grp_fu_1138_p1 <= grp_matchedFilter_fu_467_grp_fu_1138_p_din1;

    grp_fu_1142_ce_assign_proc : process(ap_CS_fsm_state12, grp_matchedFilter_fu_467_grp_fu_1142_p_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_1142_ce <= grp_matchedFilter_fu_467_grp_fu_1142_p_ce;
        else 
            grp_fu_1142_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1142_p0 <= grp_matchedFilter_fu_467_grp_fu_1142_p_din0;
    grp_fu_1142_p1 <= grp_matchedFilter_fu_467_grp_fu_1142_p_din1;

    grp_fu_1146_ce_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1146_p_ce, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1146_ce <= grp_fft_fu_479_grp_fu_1146_p_ce;
        else 
            grp_fu_1146_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1146_p0 <= grp_fft_fu_479_grp_fu_1146_p_din0;
    grp_fu_1146_p1 <= grp_fft_fu_479_grp_fu_1146_p_din1;

    grp_fu_1150_ce_assign_proc : process(ap_CS_fsm_state20, grp_fft_fu_479_grp_fu_1150_p_ce, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_1150_ce <= grp_fft_fu_479_grp_fu_1150_p_ce;
        else 
            grp_fu_1150_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1150_p0 <= grp_fft_fu_479_grp_fu_1150_p_din0;
    grp_fu_1150_p1 <= grp_fft_fu_479_grp_fu_1150_p_din1;

    grp_fu_739_ce_assign_proc : process(ap_CS_fsm_state12, grp_matchedFilter_fu_467_grp_fu_739_p_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_739_ce <= grp_matchedFilter_fu_467_grp_fu_739_p_ce;
        else 
            grp_fu_739_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_739_p0_assign_proc : process(zext_ln1118_fu_733_p1, ap_CS_fsm_state12, ap_enable_reg_pp3_iter3, grp_matchedFilter_fu_467_grp_fu_739_p_din0, ap_block_pp3_stage0, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_739_p0 <= grp_matchedFilter_fu_467_grp_fu_739_p_din0;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            grp_fu_739_p0 <= zext_ln1118_fu_733_p1(10 - 1 downto 0);
        else 
            grp_fu_739_p0 <= zext_ln1118_fu_733_p1(10 - 1 downto 0);
        end if; 
    end process;


    grp_fu_739_p1_assign_proc : process(sext_ln1118_fu_736_p1, ap_CS_fsm_state12, ap_enable_reg_pp3_iter3, grp_matchedFilter_fu_467_grp_fu_739_p_din1, ap_block_pp3_stage0, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_739_p1 <= grp_matchedFilter_fu_467_grp_fu_739_p_din1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            grp_fu_739_p1 <= sext_ln1118_fu_736_p1(32 - 1 downto 0);
        else 
            grp_fu_739_p1 <= sext_ln1118_fu_736_p1(32 - 1 downto 0);
        end if; 
    end process;


    grp_fu_748_ce_assign_proc : process(ap_CS_fsm_state12, grp_matchedFilter_fu_467_grp_fu_748_p_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_748_ce <= grp_matchedFilter_fu_467_grp_fu_748_p_ce;
        else 
            grp_fu_748_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_748_p0_assign_proc : process(zext_ln1118_fu_733_p1, ap_CS_fsm_state12, ap_enable_reg_pp3_iter3, grp_matchedFilter_fu_467_grp_fu_748_p_din0, ap_block_pp3_stage0, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_748_p0 <= grp_matchedFilter_fu_467_grp_fu_748_p_din0;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            grp_fu_748_p0 <= zext_ln1118_fu_733_p1(10 - 1 downto 0);
        else 
            grp_fu_748_p0 <= zext_ln1118_fu_733_p1(10 - 1 downto 0);
        end if; 
    end process;


    grp_fu_748_p1_assign_proc : process(sext_ln1118_1_fu_745_p1, ap_CS_fsm_state12, ap_enable_reg_pp3_iter3, grp_matchedFilter_fu_467_grp_fu_748_p_din1, ap_block_pp3_stage0, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_748_p1 <= grp_matchedFilter_fu_467_grp_fu_748_p_din1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            grp_fu_748_p1 <= sext_ln1118_1_fu_745_p1(32 - 1 downto 0);
        else 
            grp_fu_748_p1 <= sext_ln1118_1_fu_745_p1(32 - 1 downto 0);
        end if; 
    end process;

    grp_matchedFilter_fu_467_ap_start <= grp_matchedFilter_fu_467_ap_start_reg;
    grp_matchedFilter_fu_467_grp_fu_1138_p_dout0 <= grp_fu_1138_p2;
    grp_matchedFilter_fu_467_grp_fu_1142_p_dout0 <= grp_fu_1142_p2;
    grp_matchedFilter_fu_467_grp_fu_739_p_dout0 <= grp_fu_739_p2;
    grp_matchedFilter_fu_467_grp_fu_748_p_dout0 <= grp_fu_748_p2;
    grp_matmul_fu_491_ap_start <= grp_matmul_fu_491_ap_start_reg;
    grp_matmul_fu_491_grp_fu_1130_p_dout0 <= grp_fu_1130_p2;
    grp_matmul_fu_491_grp_fu_1134_p_dout0 <= grp_fu_1134_p2;
    hamming_coeff_M_real_V_address0 <= j_1_cast_fu_714_p1(6 - 1 downto 0);

    hamming_coeff_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            hamming_coeff_M_real_V_ce0 <= ap_const_logic_1;
        else 
            hamming_coeff_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_1_cast_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_335),64));
    i_5_cast_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_445),64));
    i_6_cast_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_456),64));
    i_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_324),64));
    icmp_ln108_fu_650_p2 <= "1" when (indvar_flatten7_reg_379 = ap_const_lv14_2FAF) else "0";
    icmp_ln109_fu_662_p2 <= "1" when (j_1_reg_401 = ap_const_lv6_27) else "0";
    icmp_ln10_fu_524_p2 <= "1" when (i_1_reg_335 = ap_const_lv14_30E8) else "0";
    icmp_ln17_fu_876_p2 <= "1" when (i_5_reg_445 = ap_const_lv14_2720) else "0";
    icmp_ln21_fu_893_p2 <= "1" when (i_6_reg_456 = ap_const_lv14_2720) else "0";
    icmp_ln37_fu_541_p2 <= "1" when (indvar_flatten_reg_346 = ap_const_lv14_30E8) else "0";
    icmp_ln38_fu_553_p2 <= "1" when (j_reg_368 = ap_const_lv6_28) else "0";
    icmp_ln59_fu_780_p2 <= "1" when (indvar_flatten15_reg_412 = ap_const_lv14_2720) else "0";
    icmp_ln60_fu_792_p2 <= "1" when (j_2_reg_434 = ap_const_lv6_20) else "0";
    icmp_ln6_fu_507_p2 <= "1" when (i_reg_324 = ap_const_lv14_30E8) else "0";

    imag_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter2, ap_block_pp2_stage0, ap_block_pp4_stage0, i_1_cast_fu_530_p1, zext_ln40_fu_633_p1, zext_ln62_fu_865_p1, i_6_cast_fu_899_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            imag_V_address0 <= i_6_cast_fu_899_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            imag_V_address0 <= zext_ln62_fu_865_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            imag_V_address0 <= zext_ln40_fu_633_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            imag_V_address0 <= i_1_cast_fu_530_p1(14 - 1 downto 0);
        else 
            imag_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    imag_V_ce0_assign_proc : process(ap_CS_fsm_state4, icmp_ln10_fu_524_p2, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp6_iter0, ap_block_pp6_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter2, data_IN_TVALID_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or (not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            imag_V_ce0 <= ap_const_logic_1;
        else 
            imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    imag_V_d0_assign_proc : process(ap_CS_fsm_state4, mat_A_M_imag_V_q0, ap_enable_reg_pp4_iter2, ap_block_pp4_stage0, data_IN_TDATA_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            imag_V_d0 <= mat_A_M_imag_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            imag_V_d0 <= data_IN_TDATA_int_regslice;
        else 
            imag_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    imag_V_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln10_fu_524_p2, ap_block_pp4_stage0_11001, icmp_ln59_reg_1056_pp4_iter1_reg, ap_enable_reg_pp4_iter2, data_IN_TVALID_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (icmp_ln59_reg_1056_pp4_iter1_reg = ap_const_lv1_0)) or (not(((icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln10_fu_524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            imag_V_we0 <= ap_const_logic_1;
        else 
            imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    j_1_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln108_reg_971),64));
    j_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_reg_929),12));

    mat_A_M_imag_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, zext_ln110_2_fu_727_p1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_enable_reg_pp3_iter1, ap_CS_fsm_state20, ap_enable_reg_pp4_iter1, grp_matchedFilter_fu_467_out_M_imag_address0, grp_fft_fu_479_out_M_imag_address0, grp_matmul_fu_491_a_M_imag_address0, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp4_stage0, ap_CS_fsm_state10, zext_ln40_3_fu_639_p1, zext_ln62_3_fu_853_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            mat_A_M_imag_V_address0 <= zext_ln62_3_fu_853_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            mat_A_M_imag_V_address0 <= zext_ln110_2_fu_727_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            mat_A_M_imag_V_address0 <= zext_ln40_3_fu_639_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_A_M_imag_V_address0 <= grp_matmul_fu_491_a_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_imag_V_address0 <= grp_fft_fu_479_out_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_imag_V_address0 <= grp_matchedFilter_fu_467_out_M_imag_address0;
        else 
            mat_A_M_imag_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_A_M_imag_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_enable_reg_pp3_iter1, ap_CS_fsm_state20, ap_enable_reg_pp4_iter1, grp_matchedFilter_fu_467_out_M_imag_ce0, grp_fft_fu_479_out_M_imag_ce0, grp_matmul_fu_491_a_M_imag_ce0, ap_CS_fsm_state10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)))) then 
            mat_A_M_imag_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_A_M_imag_V_ce0 <= grp_matmul_fu_491_a_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_imag_V_ce0 <= grp_fft_fu_479_out_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_imag_V_ce0 <= grp_matchedFilter_fu_467_out_M_imag_ce0;
        else 
            mat_A_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_A_M_imag_V_d0_assign_proc : process(imag_V_q0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_CS_fsm_state20, grp_matchedFilter_fu_467_out_M_imag_d0, grp_fft_fu_479_out_M_imag_d0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            mat_A_M_imag_V_d0 <= imag_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_imag_V_d0 <= grp_fft_fu_479_out_M_imag_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_imag_V_d0 <= grp_matchedFilter_fu_467_out_M_imag_d0;
        else 
            mat_A_M_imag_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_A_M_imag_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln37_reg_925_pp2_iter1_reg, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_CS_fsm_state20, grp_matchedFilter_fu_467_out_M_imag_we0, grp_fft_fu_479_out_M_imag_we0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln37_reg_925_pp2_iter1_reg = ap_const_lv1_0))) then 
            mat_A_M_imag_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_imag_V_we0 <= grp_fft_fu_479_out_M_imag_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_imag_V_we0 <= grp_matchedFilter_fu_467_out_M_imag_we0;
        else 
            mat_A_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_A_M_real_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, zext_ln110_2_fu_727_p1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_enable_reg_pp3_iter1, ap_CS_fsm_state20, ap_enable_reg_pp4_iter1, grp_matchedFilter_fu_467_out_M_real_address0, grp_fft_fu_479_out_M_real_address0, grp_matmul_fu_491_a_M_real_address0, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp4_stage0, ap_CS_fsm_state10, zext_ln40_3_fu_639_p1, zext_ln62_3_fu_853_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            mat_A_M_real_V_address0 <= zext_ln62_3_fu_853_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            mat_A_M_real_V_address0 <= zext_ln110_2_fu_727_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            mat_A_M_real_V_address0 <= zext_ln40_3_fu_639_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_A_M_real_V_address0 <= grp_matmul_fu_491_a_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_real_V_address0 <= grp_fft_fu_479_out_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_real_V_address0 <= grp_matchedFilter_fu_467_out_M_real_address0;
        else 
            mat_A_M_real_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_A_M_real_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_enable_reg_pp3_iter1, ap_CS_fsm_state20, ap_enable_reg_pp4_iter1, grp_matchedFilter_fu_467_out_M_real_ce0, grp_fft_fu_479_out_M_real_ce0, grp_matmul_fu_491_a_M_real_ce0, ap_CS_fsm_state10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)))) then 
            mat_A_M_real_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_A_M_real_V_ce0 <= grp_matmul_fu_491_a_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_real_V_ce0 <= grp_fft_fu_479_out_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_real_V_ce0 <= grp_matchedFilter_fu_467_out_M_real_ce0;
        else 
            mat_A_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_A_M_real_V_d0_assign_proc : process(real_V_q0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_CS_fsm_state20, grp_matchedFilter_fu_467_out_M_real_d0, grp_fft_fu_479_out_M_real_d0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            mat_A_M_real_V_d0 <= real_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_real_V_d0 <= grp_fft_fu_479_out_M_real_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_real_V_d0 <= grp_matchedFilter_fu_467_out_M_real_d0;
        else 
            mat_A_M_real_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_A_M_real_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln37_reg_925_pp2_iter1_reg, ap_enable_reg_pp2_iter2, ap_CS_fsm_state12, ap_CS_fsm_state20, grp_matchedFilter_fu_467_out_M_real_we0, grp_fft_fu_479_out_M_real_we0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln37_reg_925_pp2_iter1_reg = ap_const_lv1_0))) then 
            mat_A_M_real_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_A_M_real_V_we0 <= grp_fft_fu_479_out_M_real_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_A_M_real_V_we0 <= grp_matchedFilter_fu_467_out_M_real_we0;
        else 
            mat_A_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_B_M_imag_V_address0_assign_proc : process(zext_ln110_2_reg_989_pp3_iter4_reg, ap_CS_fsm_state12, ap_enable_reg_pp3_iter5, ap_CS_fsm_state20, grp_matchedFilter_fu_467_a_M_imag_address0, grp_fft_fu_479_a_M_imag_address0, grp_matmul_fu_491_out_M_imag_address0, ap_block_pp3_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_imag_V_address0 <= zext_ln110_2_reg_989_pp3_iter4_reg(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_imag_V_address0 <= grp_matmul_fu_491_out_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_B_M_imag_V_address0 <= grp_fft_fu_479_a_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_B_M_imag_V_address0 <= grp_matchedFilter_fu_467_a_M_imag_address0;
        else 
            mat_B_M_imag_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_B_M_imag_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp3_iter5, ap_CS_fsm_state20, grp_matchedFilter_fu_467_a_M_imag_ce0, grp_fft_fu_479_a_M_imag_ce0, grp_matmul_fu_491_out_M_imag_ce0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_imag_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_imag_V_ce0 <= grp_matmul_fu_491_out_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_B_M_imag_V_ce0 <= grp_fft_fu_479_a_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_B_M_imag_V_ce0 <= grp_matchedFilter_fu_467_a_M_imag_ce0;
        else 
            mat_B_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_B_M_imag_V_d0_assign_proc : process(p_r_M_imag_V_reg_1046, ap_enable_reg_pp3_iter5, grp_matmul_fu_491_out_M_imag_d0, ap_block_pp3_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_imag_V_d0 <= p_r_M_imag_V_reg_1046;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_imag_V_d0 <= grp_matmul_fu_491_out_M_imag_d0;
        else 
            mat_B_M_imag_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_B_M_imag_V_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln108_reg_967_pp3_iter4_reg, ap_enable_reg_pp3_iter5, grp_matmul_fu_491_out_M_imag_we0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (icmp_ln108_reg_967_pp3_iter4_reg = ap_const_lv1_0))) then 
            mat_B_M_imag_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_imag_V_we0 <= grp_matmul_fu_491_out_M_imag_we0;
        else 
            mat_B_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_B_M_real_V_address0_assign_proc : process(zext_ln110_2_reg_989_pp3_iter4_reg, ap_CS_fsm_state12, ap_enable_reg_pp3_iter5, ap_CS_fsm_state20, grp_matchedFilter_fu_467_a_M_real_address0, grp_fft_fu_479_a_M_real_address0, grp_matmul_fu_491_out_M_real_address0, ap_block_pp3_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_real_V_address0 <= zext_ln110_2_reg_989_pp3_iter4_reg(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_real_V_address0 <= grp_matmul_fu_491_out_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_B_M_real_V_address0 <= grp_fft_fu_479_a_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_B_M_real_V_address0 <= grp_matchedFilter_fu_467_a_M_real_address0;
        else 
            mat_B_M_real_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_B_M_real_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp3_iter5, ap_CS_fsm_state20, grp_matchedFilter_fu_467_a_M_real_ce0, grp_fft_fu_479_a_M_real_ce0, grp_matmul_fu_491_out_M_real_ce0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_real_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_real_V_ce0 <= grp_matmul_fu_491_out_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            mat_B_M_real_V_ce0 <= grp_fft_fu_479_a_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mat_B_M_real_V_ce0 <= grp_matchedFilter_fu_467_a_M_real_ce0;
        else 
            mat_B_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_B_M_real_V_d0_assign_proc : process(p_r_V_2_reg_1041, ap_enable_reg_pp3_iter5, grp_matmul_fu_491_out_M_real_d0, ap_block_pp3_stage0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1))) then 
            mat_B_M_real_V_d0 <= p_r_V_2_reg_1041;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_real_V_d0 <= grp_matmul_fu_491_out_M_real_d0;
        else 
            mat_B_M_real_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mat_B_M_real_V_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln108_reg_967_pp3_iter4_reg, ap_enable_reg_pp3_iter5, grp_matmul_fu_491_out_M_real_we0, ap_CS_fsm_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (icmp_ln108_reg_967_pp3_iter4_reg = ap_const_lv1_0))) then 
            mat_B_M_real_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mat_B_M_real_V_we0 <= grp_matmul_fu_491_out_M_real_we0;
        else 
            mat_B_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter2, ap_block_pp2_stage0, ap_block_pp4_stage0, i_cast_fu_513_p1, zext_ln40_fu_633_p1, zext_ln62_fu_865_p1, i_5_cast_fu_882_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            real_V_address0 <= i_5_cast_fu_882_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            real_V_address0 <= zext_ln62_fu_865_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            real_V_address0 <= zext_ln40_fu_633_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            real_V_address0 <= i_cast_fu_513_p1(14 - 1 downto 0);
        else 
            real_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    real_V_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln6_fu_507_p2, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_block_pp4_stage0_11001, ap_enable_reg_pp5_iter0, ap_block_pp5_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter2, data_IN_TVALID_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or (not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            real_V_ce0 <= ap_const_logic_1;
        else 
            real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    real_V_d0_assign_proc : process(ap_CS_fsm_state2, mat_A_M_real_V_q0, ap_enable_reg_pp4_iter2, ap_block_pp4_stage0, data_IN_TDATA_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            real_V_d0 <= mat_A_M_real_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            real_V_d0 <= data_IN_TDATA_int_regslice;
        else 
            real_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    real_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln6_fu_507_p2, ap_block_pp4_stage0_11001, icmp_ln59_reg_1056_pp4_iter1_reg, ap_enable_reg_pp4_iter2, data_IN_TVALID_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (icmp_ln59_reg_1056_pp4_iter1_reg = ap_const_lv1_0)) or (not(((icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (data_IN_TVALID_int_regslice = ap_const_logic_0))) and (icmp_ln6_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            real_V_we0 <= ap_const_logic_1;
        else 
            real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln108_1_fu_676_p3 <= 
        add_ln108_fu_656_p2 when (icmp_ln109_fu_662_p2(0) = '1') else 
        ap_phi_mux_i_3_phi_fu_394_p4;
    select_ln108_fu_668_p3 <= 
        ap_const_lv6_0 when (icmp_ln109_fu_662_p2(0) = '1') else 
        j_1_reg_401;
    select_ln37_1_fu_567_p3 <= 
        add_ln37_fu_547_p2 when (icmp_ln38_fu_553_p2(0) = '1') else 
        ap_phi_mux_i_2_phi_fu_361_p4;
    select_ln37_fu_559_p3 <= 
        ap_const_lv6_0 when (icmp_ln38_fu_553_p2(0) = '1') else 
        j_reg_368;
    select_ln59_1_fu_806_p3 <= 
        add_ln59_fu_786_p2 when (icmp_ln60_fu_792_p2(0) = '1') else 
        ap_phi_mux_i_4_phi_fu_427_p4;
    select_ln59_fu_798_p3 <= 
        ap_const_lv6_0 when (icmp_ln60_fu_792_p2(0) = '1') else 
        j_2_reg_434;
        sext_ln1118_1_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_M_imag_V_2_reg_1015),40));

        sext_ln1118_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_r_M_real_V_1_reg_1010),40));

    tmp_1_fu_588_p3 <= (select_ln37_1_reg_935 & ap_const_lv3_0);
    tmp_2_fu_690_p3 <= (select_ln108_1_reg_977 & ap_const_lv5_0);
    tmp_3_fu_697_p3 <= (select_ln108_1_reg_977 & ap_const_lv3_0);
    tmp_4_fu_820_p3 <= (select_ln59_1_reg_1065 & ap_const_lv5_0);
    tmp_5_fu_827_p3 <= (select_ln59_1_reg_1065 & ap_const_lv3_0);
    tmp_fu_581_p3 <= (select_ln37_1_reg_935 & ap_const_lv5_0);
    zext_ln110_1_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln108_reg_971),14));
    zext_ln110_2_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln110_1_fu_721_p2),64));
    zext_ln110_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_697_p3),14));
    zext_ln1118_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hamming_coeff_M_real_V_load_reg_1020),40));
    zext_ln39_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_1_fu_617_p2),14));
    zext_ln40_1_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_588_p3),14));
    zext_ln40_2_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_reg_929),14));
    zext_ln40_3_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_1_reg_947),64));
    zext_ln40_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_fu_627_p2),64));
    zext_ln62_1_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_827_p3),14));
    zext_ln62_2_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_reg_1060),14));
    zext_ln62_3_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_1_fu_847_p2),64));
    zext_ln62_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_reg_1087),64));
end behav;
